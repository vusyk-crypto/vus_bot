import logging
import sys
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo, InputFile
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import os

logging.basicConfig(level=logging.DEBUG,
                    format='%(asctime)s - %(name)s - %(message)s',
                    stream=sys.stdout)

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    username = update.message.from_user.username
    logging.info(f"–í—ñ–¥–ø—Ä–∞–≤–ª—è—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {username} –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É")

    # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É –∑ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É —á–µ—Ä–µ–∑ Telegram WebApp
    web_app_url = f"https://vusyk-crypto.github.io/vus_bot/?username={username}"
    
    # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É "–í–ø–µ—Ä–µ–¥"
    button = KeyboardButton(text="üöÄ –í–ø–µ—Ä–µ–¥", web_app=WebAppInfo(url=web_app_url))
    keyboard = ReplyKeyboardMarkup([[button]], resize_keyboard=True, one_time_keyboard=True)

    # –§–æ—Ä–º–∞—Ç—É—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ VUS –∂–∏—Ä–Ω–∏–º —à—Ä–∏—Ñ—Ç–æ–º
    formatted_message = (
        f"–ü—Ä–∏–≤—ñ—Ç, *{username}*! "
        f"–¢–∏ –≥–æ—Ç–æ–≤–∏–π —É–≤—ñ–π—Ç–∏ –≤ –¥—Ä—É–∂–Ω—é –∫—Ä–∏–ø—Ç–æ—Å–ø—ñ–ª—å–Ω–æ—Ç—É *VUS*? "
        f"–¢–∏—Å–Ω–∏ –Ω–∞ ‚öôÔ∏è –∫–Ω–æ–ø–∫—É '–í–ø–µ—Ä–µ–¥!'"
    )

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–æ—é
    await update.message.reply_text(
        formatted_message,
        reply_markup=keyboard,
        parse_mode="Markdown"  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Markdown –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
    )

# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ
async def send_image(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –í–∫–∞–∑—É—î–º–æ –∞–±—Å–æ–ª—é—Ç–Ω–∏–π —à–ª—è—Ö –¥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    photo_path = os.path.join(os.path.dirname(__file__), 'vus.png')
    
    try:
        await context.bot.send_photo(chat_id=update.message.chat_id, photo=InputFile(photo_path))
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: {e}")

if __name__ == '__main__':
    token = "7230512720:AAG0mtv0oUBi9HAh-kCUex9YF-JNmkQXSxQ"  # –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω–∏–π —Ç–æ–∫–µ–Ω
    logging.info(f"–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∑ —Ç–æ–∫–µ–Ω–æ–º: {token}")
    application = ApplicationBuilder().token(token).build()

    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /start
    application.add_handler(CommandHandler("start", start))

    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    application.add_handler(CommandHandler("send_image", send_image))

    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π. –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥...")
    application.run_polling()
